AWSTemplateFormatVersion: "2010-09-09"
Description: Template for creating ECR repository and ECS cluster for Padel Booking application

Resources:

  ECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "padel-booking-repo"

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"

  Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.0.0/24"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  ECSRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ECSCloudwatchLogsPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: padel-booking-cluster

  Service:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: "padel-booking-service"
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: "FARGATE"
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref Subnet
          SecurityGroups:
            - !GetAtt ECSSecurityGroup.GroupId
  
  TaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: "padel-booking-task"
      Cpu: "256"
      Memory: "512"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: !GetAtt ECSRole.Arn
      ContainerDefinitions:
        - Name: "padel-booking-container"
          Image: !Join ["", [!Ref ECRRepository, ":", "latest"]]
          PortMappings:
            - ContainerPort: 3000
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Join ["-", [!Ref "AWS::StackName", "ecslogs"]]
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: "padel-booking"

  ECSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security Group for ECS Service"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: "0.0.0.0/0"